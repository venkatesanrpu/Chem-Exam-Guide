name: Update Problem JSON with Debugging

on:
  push:
    paths:
      - "problem-set-*/assets/**"  # Trigger when an image is added
      - "problem-set-*/images/**"  # Trigger when a new folder is created
  workflow_dispatch:  # Allows manual execution

jobs:
  update_json:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Debug: List all files in repository
      - name: Debug Repository Structure
        run: ls -R $GITHUB_WORKSPACE

      # Identify latest problem set dynamically
      - name: Identify Latest Problem Set Folder
        run: |
          PROBLEM_SET=$(ls -d problem-set-* | tail -n 1)
          echo "Detected problem set: $PROBLEM_SET"
          echo "PROBLEM_SET=$PROBLEM_SET" >> $GITHUB_ENV

      # Debug: Confirm detected problem set folder
      - name: Debug Problem Set Detection
        run: echo "Using problem set: $PROBLEM_SET"

      # Ensure JSON file exists (create if missing)
      - name: Ensure JSON File Exists
        run: |
          JSON_FILE="$GITHUB_WORKSPACE/$PROBLEM_SET/problem.json"
          if [ ! -f "$JSON_FILE" ]; then
            echo "Creating new JSON file: $JSON_FILE"
            echo '{"item":[]}' > "$JSON_FILE"
          fi

      # Debug: Confirm JSON file creation
      - name: Debug JSON File
        run: ls -l "$GITHUB_WORKSPACE/$PROBLEM_SET/problem.json"

      # Identify latest image uploaded in assets folder
      - name: Identify Latest Image File
        run: |
          IMAGE_PATH=$(ls "$GITHUB_WORKSPACE/$PROBLEM_SET/assets" | tail -n 1)
          echo "Detected image: $IMAGE_PATH"
          echo "IMAGE_PATH=$IMAGE_PATH" >> $GITHUB_ENV

      # Debug: Confirm if image is found
      - name: Debug Image Selection
        run: echo "Selected image file: $IMAGE_PATH"

      # Validate image selection (exit if empty)
      - name: Check if Image Exists
        run: |
          if [ -z "$IMAGE_PATH" ]; then
            echo "No image found, exiting workflow."
            exit 1
          fi

      # Generate image URL
      - name: Generate Image URL
        run: |
          IMAGE_URL="https://venkatesanrpu.github.io/Chem-Exam-Guide/$PROBLEM_SET/assets/$IMAGE_PATH"
          PROBLEM_ID=$(basename "$IMAGE_PATH" .png)
          echo "Image URL: $IMAGE_URL"
          echo "PROBLEM_ID=$PROBLEM_ID" >> $GITHUB_ENV

      # Debug: Confirm generated image URL
      - name: Debug Image URL
        run: echo "Final Image URL: $IMAGE_URL"

      # Append new image details to JSON file
      - name: Append Image Data to JSON
        run: |
          JSON_FILE="$GITHUB_WORKSPACE/$PROBLEM_SET/problem.json"
          jq --arg id "$PROBLEM_ID" --arg url "$IMAGE_URL" \
          '.item += [{"problemID": $id, "problemImage": $url, "problemCategory": "Unknown"}]' \
          "$JSON_FILE" > "$GITHUB_WORKSPACE/tmp.json" && mv "$GITHUB_WORKSPACE/tmp.json" "$JSON_FILE"

      # Debug: Show final JSON content
      - name: Debug Final JSON Content
        run: cat "$GITHUB_WORKSPACE/$PROBLEM_SET/problem.json"

      # Commit and push changes
      - name: Commit and Push Updated JSON
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add "$GITHUB_WORKSPACE/$PROBLEM_SET/problem.json"
          git commit -m "Updated JSON with new image in $PROBLEM_SET"
          git push
